[{"C:\\Users\\Asus\\Documents\\colbun-1\\src\\App.js":"1","C:\\Users\\Asus\\Documents\\colbun-1\\src\\Components\\FormCase\\FormCases.jsx":"2","C:\\Users\\Asus\\Documents\\colbun-1\\src\\Vistas\\Home.jsx":"3","C:\\Users\\Asus\\Documents\\colbun-1\\src\\Components\\Menu\\Menu.jsx":"4"},{"size":934,"mtime":1606485085179,"results":"5","hashOfConfig":"6"},{"size":6645,"mtime":1606487170581,"results":"7","hashOfConfig":"6"},{"size":4816,"mtime":1606485646108,"results":"8","hashOfConfig":"6"},{"size":1133,"mtime":1606486593353,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dvnach",{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Asus\\Documents\\colbun-1\\src\\App.js",[],"C:\\Users\\Asus\\Documents\\colbun-1\\src\\Components\\FormCase\\FormCases.jsx",["19","20","21","22"],"C:\\Users\\Asus\\Documents\\colbun-1\\src\\Vistas\\Home.jsx",["23","24","25","26","27","28","29"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../img/logo.png\";\r\nimport edit from \"../img/Home/edit.png\";\r\nimport add from \"../img/Home/add.png\";\r\nimport avatar from \"../img/Home/avatar-01.png\";\r\nimport search from \"../img/Home/mdi_search.png\";\r\n//import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Home.css\";\r\n//Components\r\nimport NavBar from \"../Components/Menu/Menu\";\r\nfunction Home() {\r\n  const [casos, setCasos] = React.useState([]);\r\n  React.useEffect(() => {\r\n    console.log(\"useEffect\");\r\n    obtenerDatos();\r\n  }, []);\r\n\r\n  const obtenerDatos = async () => {\r\n    const datos = await fetch(\"dataCase.json\");\r\n    const archivoJ = await datos.json();\r\n    console.log(archivoJ);\r\n    setCasos(archivoJ);\r\n  };\r\n\r\n  const buscarDatos = async (valor) => {\r\n    console.log(\"valor: \" + valor);\r\n    const busqueda = await fetch(\"dataCase.json\");\r\n    const busquedaJ = await busqueda.json();\r\n    console.log(busquedaJ);\r\n    if (valor != \"\") {\r\n      const presentacion = await busquedaJ.map((item) =>\r\n        valor == item.name ? item : \"\"\r\n      );\r\n      const book = presentacion.filter(Boolean);\r\n      console.log(book);\r\n      setCasos(book);\r\n    } else {\r\n      setCasos(busquedaJ);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"animsition\">\r\n      <div className=\"page-wrapper\">\r\n        <div className=\"page-container\">\r\n          <header className=\"header-desktop\">\r\n            <NavBar></NavBar>\r\n            <div className=\"logo\">\r\n              <Link to=\"/\">\r\n                {\" \"}\r\n                <img src={logo} />\r\n              </Link>\r\n            </div>\r\n            <div className=\"section__content section__content--p30\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"header-wrap\">\r\n                  <div className=\"form-header\">\r\n                    <input\r\n                      className=\"au-input au-input--xl\"\r\n                      id=\"inputSearch\"\r\n                      type=\"search\"\r\n                      name=\"search\"\r\n                      placeholder=\"Buscar..\"\r\n                    />\r\n                    <button\r\n                      className=\"au-btn--submit\"\r\n                      onClick={() =>\r\n                        buscarDatos(\r\n                          document.getElementById(\"inputSearch\").value\r\n                        )\r\n                      }\r\n                    >\r\n                      <img src={search} />\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"header-button\">\r\n                    <div className=\"account-wrap\">\r\n                      <div className=\"account-item\">\r\n                        <div className=\"image\">\r\n                          <img src={avatar} />\r\n                        </div>\r\n                        <div className=\"content\">john doe</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </header>\r\n          <body>\r\n            <div className=\"main-content\">\r\n              <div className=\"section__content section__content--p30\">\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"overview-wrap\">\r\n                        <h1 className=\"title-1\"> Inicio </h1>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row-casos\">\r\n                    <div className=\"col-lg-12\">\r\n                      <h3 className=\"title-4\"> Ultimos casos </h3>\r\n\r\n                      {casos.map((item) => (\r\n                        <div className=\"au-card recent-report\">\r\n                          <div className=\"au-card-inner\">\r\n                            <h3 className=\"title-5\">{item.name}</h3>\r\n                            <h3 className=\"title-6\">Tema: {item.id}</h3>\r\n                            <h3 className=\"title-6\">\r\n                              Area cliente: {item.area}\r\n                            </h3>\r\n                            <h3 className=\"title-6\">Entregables: {item.ent}</h3>\r\n                            <div className=\"Icons\">\r\n                              {\" \"}\r\n                              <img src={edit} className=\"edit\" />{\" \"}\r\n                              <img src={add} className=\"edit\" />{\" \"}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </body>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Asus\\Documents\\colbun-1\\src\\Components\\Menu\\Menu.jsx",[],{"ruleId":"30","severity":1,"message":"31","line":5,"column":8,"nodeType":"32","messageId":"33","endLine":5,"endColumn":21},{"ruleId":"30","severity":1,"message":"34","line":11,"column":8,"nodeType":"32","messageId":"33","endLine":11,"endColumn":17},{"ruleId":"30","severity":1,"message":"35","line":16,"column":8,"nodeType":"32","messageId":"33","endLine":16,"endColumn":14},{"ruleId":"36","severity":1,"message":"37","line":66,"column":17,"nodeType":"38","endLine":66,"endColumn":35},{"ruleId":"39","severity":1,"message":"40","line":31,"column":15,"nodeType":"41","messageId":"42","endLine":31,"endColumn":17},{"ruleId":"39","severity":1,"message":"43","line":33,"column":15,"nodeType":"41","messageId":"42","endLine":33,"endColumn":17},{"ruleId":"36","severity":1,"message":"37","line":52,"column":17,"nodeType":"38","endLine":52,"endColumn":35},{"ruleId":"36","severity":1,"message":"37","line":74,"column":23,"nodeType":"38","endLine":74,"endColumn":43},{"ruleId":"36","severity":1,"message":"37","line":81,"column":27,"nodeType":"38","endLine":81,"endColumn":47},{"ruleId":"36","severity":1,"message":"37","line":118,"column":31,"nodeType":"38","endLine":118,"endColumn":66},{"ruleId":"36","severity":1,"message":"37","line":119,"column":31,"nodeType":"38","endLine":119,"endColumn":65},"no-unused-vars","'PrincipalLogo' is defined but never used.","Identifier","unusedVar","'TableCase' is defined but never used.","'avatar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='."]